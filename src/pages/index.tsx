import Head from "next/head";

import Title from "@/components/Title";
import RecentPosts from "@/components/RecentPosts";
import AllPosts from "@/components/AllPosts";
import axios from "axios";
import type { InferGetStaticPropsType, GetStaticProps } from "next";
import Post from "@/schemas/post";
import NoPostsFound from "@/components/NoPostsFound";

export default function Home({
  posts,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  const recentPosts = posts.slice(0, 4);
  const allPosts = posts.slice(4);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Title />
      {posts.length === 0 && <NoPostsFound />}
      {posts.length > 0 && (
        <>
          <RecentPosts posts={recentPosts} />
          <AllPosts posts={allPosts} />
        </>
      )}
    </>
  );
}

export const getStaticProps: GetStaticProps<{
  posts: Post[];
}> = async () => {
  try {
    const res = await axios.get("https://jsonplaceholder.typicode.com/posts");
    const posts = await res.data;

    return {
      props: {
        posts,
      },
      revalidate: 60,
    };
  } catch (error) {
    return {
      props: {
        posts: [],
      },
    };
  }
};
